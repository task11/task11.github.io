{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-javascript-array-index-mdx-2e5e1a833615ea13dcf1.js","mappings":"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","sources":["webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://task11.github.io/./content/posts/javascript-array/index.mdx","webpack://task11.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h1: \"h1\",\n    hr: \"hr\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    h4: \"h4\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"💡 자바스크립트의 배열을 예제를 작성하며 알아보자.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"개요 🛫\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"이번 포스트에서는 자바스크립트의 배열의 특징과 배열의 프로토타입 함수들을 정리하고, 공부하는 시간을 가져볼 것이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"매우 매우 자주 사용되는 \", React.createElement(_components.code, null, \"reduce\"), \", \", React.createElement(_components.code, null, \"filter\"), \" .. 등등 배열 프로토타입 함수들을 예제를 통해 파헤쳐보고 익숙해지는 시간을 가진다.\"), \"\\n\", React.createElement(_components.h1, null, \"학습 내용 📖\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"자바스크립트의 배열\"), \"\\n\", React.createElement(_components.h3, null, \"자바스크립트의 배열은 다르다 ?\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"자바스크립트의 배열은 다른 언어에서 말하는 일반적인 배열이 아닌 Hash 기반의 객체이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"다른 언어에서의 배열이라는 자료 구조의 개념은 동일한 크기의 메모리 공간이 빈틈없이 연속적으로 나열된 자료 구조를 말하며\\n배열의 요소가 하나의 타입으로 통일되어 있고, 서로 연속적으로 인접해 있는\", React.createElement(_components.code, null, \"밀집 배열\"), \"(dense array)이다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"밀집 배열\"), \"은 인덱스를 통해 고속으로 효율적이게 요소에 접근할 수 있다는 장점이 있다.(시간 복잡도 O(1))\\n하지만 정렬되지 않은 배열에서 특정한 값을 탐색하는 경우, 모든 배열 요소를 처음부터 값을 발견할 때까지 차례대로 탐색해야 한다는 단점이 있다. (시간 복잡도 O(n))\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"자바스크립트는 배열의 요소를 위한 각각의 메모리 공간은 동일한 크기를 갖지 않아도 되며 연속적으로 이어져 있지 않을 수도 있다.\\n배열의 요소가 연속적으로 이어져 있지 않는 배열을 \", React.createElement(_components.code, null, \"희소 배열\"), \"(sparse array)이라 한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"일반적인 배열\"), \"은 인덱스로 배열 요소에 빠르게 접근할 수 있다. 하지만 특정 요소를 탐색하거나 요소를 삽입 또는 삭제하는 경우에는 효율적이지 않다.\\n\", React.createElement(_components.code, null, \"자바스크립트 배열\"), \"은 해시 테이블로 구현된 객체이므로 인덱스로 배열 요소에 접근하는 경우, 일반적인 배열보다 성능적인 면에서 느릴 수 밖에 없는 구조적인 단점을 갖는다. 하지만 특정 요소를 탐색하거나 요소를 삽입 또는 삭제하는 경우에는 일반적인 배열보다 빠른 성능을 기대할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이처럼 자바스크립트의 배열은 엄밀히 말해 일반적 의미의 배열이 아니다. 자바스크립트의 배열은 일반적인 배열의 동작을 흉내낸 특수한 객체이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [];\\n\\nnums.push(\\\"one\\\");\\nnums.push(\\\"two\\\");\\nconsole.log(nums.length); // 2\\nconsole.log(nums); // [ 'one', 'two' ]\\n\\nconsole.log(Object.getOwnPropertyDescriptors(nums));\\n// {\\n//   '0': {\\n//     value: 'one',\\n//     writable: true,\\n//     enumerable: true,\\n//     configurable: true\\n//   },\\n//   '1': {\\n//     value: 'two',\\n//     writable: true,\\n//     enumerable: true,\\n//     configurable: true\\n//   },\\n//   length: { value: 2, writable: true, enumerable: false, configurable: false }\\n// }\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"💡 자바스크립트 배열은 인덱스를 프로퍼티 키로 갖으며 length 프로퍼티를 갖는 특수한 객체이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"유사 배열\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"자바스크립트의 배열은 \", React.createElement(_components.code, null, \"객체\"), \"이므로 배열과 같이 객체를 선언하면 배열과 비슷하게 동작한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"아래는 유사배열의 예시이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let arr = [1, 2, 3];\\nlet nodes = document.querySelectorAll(\\\"div\\\"); // NodeList [div, div ...]\\n\\n// 유사 배열\\nlet arrLikeObj = {\\n  0: \\\"a\\\",\\n  1: \\\"b\\\",\\n  2: \\\"c\\\",\\n  3: \\\"d\\\",\\n  length: 4,\\n};\\n\\nArray.isArray(array); // true\\nArray.isArray(nodes); // false\\nArray.isArray(arrLikeObj); // false\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 예제를 보면 arrLikeObj 객체는 배열과 동일하게 동작할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let arrLikeObj = {\\n  0: \\\"a\\\",\\n  1: \\\"b\\\",\\n  2: \\\"c\\\",\\n  3: \\\"d\\\",\\n  length: 4,\\n};\\n\\nconsole.log(arrLikeObj[0]); // a\\nconsole.log(arrLikeObj[1]); // b\\nconsole.log(arrLikeObj[2]); // c\\nconsole.log(arrLikeObj[3]); // d\\nconsole.log(arrLikeObj.length); // 4\\n\")), \"\\n\", React.createElement(_components.p, null, \"이렇게 동일하게 동작할 수 있지만, 배열과 유사 배열을 구분해야하는 이유는 유사배열의 경우 배열의 메서드를 쓸 수 없기 때문이다.\"), \"\\n\", React.createElement(_components.p, null, \"유사배열은 \", React.createElement(_components.code, null, \"call\"), \"이나 \", React.createElement(_components.code, null, \"apply\"), \"를 사용해 배열 프로토타입에서 메서드를 빌려 써야한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// forEach 빌리기\\nArray.prototype.forEach.call(arrLikeObj, function (item) {\\n  console.log(item);\\n});\\n[].forEach.call(arrLikeObj, function (item) {\\n  console.log(item);\\n});\\n\\n// ES6\\nArray.from(arrLikeObj).forEach(function (item) {\\n  console.log(item);\\n});\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"메서드를 빌려 유사 배열을 배열처럼 동작시키는 것은 웹 프로젝트를 할 때 API 데이터를 가공하는 과정에서 사용했던 기억이 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"예제로 보는 배열 메서드\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"자주 사용되는 배열 메서드를 정리\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"1. push(pop) / shift(unshift) - 배열 추가/삭제\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"LIFO - Back : 뒤에서부터 작동\\n추가 : \", React.createElement(_components.code, null, \"Array.push(item)\"), \"\\n삭제 : \", React.createElement(_components.code, null, \"Array.pop()\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [1, 2, 3, 4, 5];\\n\\nconsole.log(nums); // [ 1, 2, 3, 4, 5 ]\\n\\nnums.push(6);\\nconsole.log(nums); // [ 1, 2, 3, 4, 5, 6 ]\\n\\nnums.pop();\\nconsole.log(nums); // [ 1, 2, 3, 4, 5 ]\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"LIFO - Front : 앞에서부터 작동\\n추가 : \", React.createElement(_components.code, null, \"Array.unshift(item)\"), \"\\n삭제 : \", React.createElement(_components.code, null, \"Array.shift()\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [1, 2, 3, 4, 5];\\n\\nconsole.log(nums); // [ 1, 2, 3, 4, 5 ]\\n\\nnums.unshift(0);\\nconsole.log(nums); // [ 0, 1, 2, 3, 4, 5 ]\\n\\nnums.shift();\\nconsole.log(nums); // [ 1, 2, 3, 4, 5 ]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2. splice - 배열 삭제/변경 (index)\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"삭제/변경 : \", React.createElement(_components.code, null, \"Array.splice(index[, deleteCount, elem1,...elemN])\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let uname = [\\\"김정현\\\", \\\"박정민\\\", \\\"이호섭\\\", \\\"최국진\\\", \\\"유바보\\\"];\\nlet ref;\\nref = uname.splice(3);\\nconsole.log(ref); // [ '최국진', '유바보' ]\\nconsole.log(uname); // [ '김정현', '박정민', '이호섭' ]\\n\\nref = uname.splice(1, 1);\\nconsole.log(ref); // [ '박정민' ]\\nconsole.log(uname); // [ '김정현', '이호섭' ]\\n\\nref = uname.splice(1, 1, \\\"noob\\\");\\nconsole.log(ref); // [ '이호섭' ]\\nconsole.log(uname); // [ '김정현', 'noob' ]\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"splice\"), \"는 원본이 훼손된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"3. slice - 배열 삭제 (index)\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"삭제 : \", React.createElement(_components.code, null, \"Array.slice([start], [end])\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let uname = [\\\"김정현\\\", \\\"박정민\\\", \\\"이호섭\\\", \\\"최국진\\\", \\\"유바보\\\"];\\n\\n// 1(제외) 오른쪽 출력\\nconsole.log(uname.slice(1)); // [ '박정민', '이호섭', '최국진', '유바보' ]\\n\\n// 3(제외) 오른쪽 출력\\nconsole.log(uname.slice(3)); // [ '최국진', '유바보' ]\\n\\n// 1(제외) ~ 3 사이 출력\\nconsole.log(uname.slice(1, 3)); // [ '박정민', '이호섭' ]\\n\\n// -2(포함) 오른쪽 출력\\nconsole.log(uname.slice(-2)); // [ '최국진', '유바보' ]\\n\\n// 원본 유지\\nconsole.log(uname); // [ '김정현', '박정민', '이호섭', '최국진', '유바보' ]\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"slice\"), \"는 원본이 유지된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"4. concat - 배열 병합\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"병합 : \", React.createElement(_components.code, null, \"Array.concat(arg1, arg2, arg3, ...)\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let uname = [\\\"김정현\\\", \\\"박정민\\\", \\\"이호섭\\\", \\\"최국진\\\", \\\"유바보\\\"];\\n\\nconsole.log(uname.concat(\\\"noob1\\\")); // [ '김정현', '박정민', '이호섭', '최국진', '유바보', 'noob1' ]\\n\\nconsole.log(uname.concat([\\\"noob1\\\", \\\"noob2\\\"], \\\"noob3\\\")); // [ '김정현', '박정민', '이호섭', '최국진', '유바보', 'noob1', 'noob2', 'noob3' ]\\n\\n// 원본 훼손 X\\nconsole.log(uname); // [ '김정현', '박정민', '이호섭', '최국진', '유바보' ]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"5. for-loop(index) / for...of(item) / for...in(key) - 배열 탐색\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Common \", React.createElement(_components.code, null, \"for\"), \"-loop(index)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let uname = [\\\"김정현\\\", \\\"박정민\\\", \\\"이호섭\\\", \\\"최국진\\\", \\\"유바보\\\"];\\n\\nfor (let i = 0; i < uname.length; i++) {\\n  console.log(uname[i]);\\n}\\n// output : 김정현 박정민 이호섭 최국진 유바보\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"for...of\"), \"(item)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"for (let name of uname) {\\n  console.log(name);\\n}\\n// output : 김정현 박정민 이호섭 최국진 유바보\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"for...in\"), \"(key)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"for (let key in uname) {\\n  console.log(uname[key]);\\n}\\n// output : 김정현 박정민 이호섭 최국진 유바보\\n\")), \"\\n\", React.createElement(_components.h3, null, \"6. indexOf / lastIndexOf / includes - 배열 탐색\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"item의 index 탐색(front) : \", React.createElement(_components.code, null, \"Array.indexOf(item)\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let uname = [\\\"e\\\", \\\"c\\\", \\\"f\\\", \\\"a\\\", \\\"d\\\", \\\"b\\\", \\\"a\\\"];\\n\\nconsole.log(uname.indexOf(\\\"a\\\")); // index : 3\\nconsole.log(uname.indexOf(\\\"z\\\")); // index : -1 (존재 X)\\nconsole.log(uname.indexOf(\\\"a\\\", 4)); // index : 6 (index 4 이후의 중복 item index)\\nconsole.log(uname.indexOf(\\\"a\\\", uname.indexOf(\\\"a\\\") + 1)); // index : 6 (첫 번 쨰 item의 중복 item index)\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"item의 index 탐색(back) : \", React.createElement(_components.code, null, \"Array.lastIndexOf(item)\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"console.log(uname.lastIndexOf(\\\"a\\\")); // index : 6\\nconsole.log(uname.lastIndexOf(\\\"a\\\", -2)); // index : 3\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"item의 include 여부 : \", React.createElement(_components.code, null, \"Array.includes(item)\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"console.log(uname.includes(\\\"a\\\")); // true\\nconsole.log(uname.includes(\\\"z\\\")); // false\\n\")), \"\\n\", React.createElement(_components.h3, null, \"7. sort / reverse - 배열 정렬\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"내림차순 정렬 : \", React.createElement(_components.code, null, \"Array.sort()\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let abc = [\\\"e\\\", \\\"c\\\", \\\"f\\\", \\\"a\\\", \\\"d\\\", \\\"b\\\", \\\"a\\\"];\\nlet nums = [5, 3, 6, 1, 2, 4, 7];\\n\\nconsole.log(abc.sort()); // ['a', 'a', 'b', 'c', 'd', 'e','f']\\n\\nconsole.log(nums.sort()); // [1, 2, 3, 4, 5, 6, 7]\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"sort\"), \" 메서드를 사용할 때 문제점과 정렬 불가능한 경우가 있는데, sort에 콜백함수를 넣어 조건 부 정렬이 가능하다. \", React.createElement(_components.a, {\n    href: \"###sort(callback-function)%EC%9E%84%EC%9D%98%EC%A0%95%EB%A0%AC\"\n  }, \"아래 고차 함수 부분\"), \" 에서 예제 확인 가능하다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"오름차순 정렬 : \", React.createElement(_components.code, null, \"Array.reverse()\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"console.log(abc.reverse()); // [ 'f', 'e', 'd', 'c', 'b', 'a', 'a']\\n\\nconsole.log(nums.reverse()); // [7, 6, 5, 4, 3, 2, 1]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"8. join - 배열 변환\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"배열 값을 문자열로 변환 : \", React.createElement(_components.code, null, \"Array.join(separator)\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let hello = [\\\"안\\\", \\\"녕\\\", \\\"하\\\", \\\"세\\\", \\\"요\\\", \\\" \\\", \\\"join\\\", \\\"예제\\\", \\\"입니다.\\\"];\\n\\nconsole.log(hello.join(\\\"~\\\")); // 안~녕~하~세~요~ ~join~예제~입니다.\\nconsole.log(hello.join(\\\"\\\")); // 안녕하세요 join예제입니다.\\n\\nlet str = hello.join(\\\"!\\\");\\nconsole.log(str); // 안!녕!하!세!요! !join!예제!입니다.\\n\\nconsole.log(str.split(\\\"!\\\")); // ['안', '녕', '하', '세', '요', ' ', 'join', '예제', '입니다.']\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"+ 배열 메서드 (고차 함수)\"), \"\\n\", React.createElement(_components.h3, null, \"1. sort(callback function)임의정렬\"), \"\\n\", React.createElement(_components.h4, null, \"sort 정렬 issue\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"숫자의 자리수 정렬 문제 : sort 메서드로 요소가 정렬될 때 일시적으로 요소들을 문자열로 변경시키는데, 이 때 ASCII 문자 순서로 정렬되어 숫자의 크기대로 나오지 않는 문제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [10, 2, 4, 3, 5, 20, 7, -1, 9, 1];\\n\\nconsole.log(nums.sort()); // [ -1, 1, 10, 2, 20, 3, 4, 5, 7, 9]\\nconsole.log(nums.reverse()); // [9, 7, 5, 4, 3, 20, 2, 10, 1, -1]\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"대소문자 구분되어 정렬 : 원인은 위와 같음\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let abc = [\\\"e\\\", \\\"c\\\", \\\"f\\\", \\\"a\\\", \\\"d\\\", \\\"F\\\", \\\"b\\\", \\\"A\\\"];\\n\\nconsole.log(abc.sort()); // ['A', 'F', 'a', 'b', 'c', 'd', 'e', 'f']\\nconsole.log(abc.reverse()); // ['f', 'e', 'd', 'c', 'b', 'a', 'F', 'A']\\n\")), \"\\n\", React.createElement(_components.h4, null, \"sort(callbackFn)으로 해결 가능\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"sort 메서드는 \", React.createElement(_components.code, null, \"(method) Array<number>.sort(compareFn?: (a: number, b: number) => number)\"), \" 로 두 수의 값을 비교해서 동작하는 정렬 알고리즘이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"number 타입 정렬\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [10, 2, 4, 3, 5, 20, 7, -1, 9, 1];\\n\\n// 오름차순\\nnums.sort(function (x, y) {\\n  return x - y;\\n});\\n\\nconsole.log(nums);\\n\\n// 내림차순\\nnums.sort(function (x, y) {\\n  return y - x;\\n});\\n\\nconsole.log(nums);\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"string 타입 대소문자 구분 없이 정렬\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let abc = [\\\"e\\\", \\\"c\\\", \\\"f\\\", \\\"a\\\", \\\"d\\\", \\\"F\\\", \\\"b\\\", \\\"A\\\"];\\n\\n// 오름차순\\nabc.sort(function (x, y) {\\n  x = x.toUpperCase();\\n  y = y.toUpperCase();\\n\\n  if (x > y) return 1;\\n  else if (x < y) return -1;\\n  else return 0;\\n});\\n\\nconsole.log(abc);\\n\\n// 내림차순\\nabc.sort(function (x, y) {\\n  x = x.toUpperCase();\\n  y = y.toUpperCase();\\n\\n  if (x < y) return 1;\\n  else if (x > y) return -1;\\n  else return 0;\\n});\\n\\nconsole.log(abc);\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"number, string 타입 대소문자 구분없는 정렬 (위 정렬코드를 하나로)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const ascendingOrder = function (x, y) {\\n  if (typeof x === \\\"string\\\") x = x.toUpperCase();\\n  if (typeof y === \\\"string\\\") y = y.toUpperCase();\\n\\n  return x > y ? 1 : -1;\\n};\\n\\nconst descendingOrder = function (x, y) {\\n  if (typeof x === \\\"string\\\") x = x.toUpperCase();\\n  if (typeof y === \\\"string\\\") y = y.toUpperCase();\\n\\n  return x < y ? 1 : -1;\\n};\\n\\nnums.sort(ascendingOrder);\\nabc.sort(descendingOrder);\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2. forEach() - 요소별 실행\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"주어진 함수를 배열 요소 각각에 대해 실행 : \", React.createElement(_components.code, null, \"Array.forEach(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"기본 예제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let abc = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"];\\n\\nabc.forEach(function (i) {\\n  console.log(i);\\n});\\n\\nabc.forEach(function (item, index) {\\n  console.log(item + \\\" foreach\\\");\\n});\\n\\n// a\\n// b\\n// c\\n// d\\n\\n// a foreach\\n// b foreach\\n// c foreach\\n// d foreach\\n\")), \"\\n\", React.createElement(_components.h3, null, \"3. map() - 요소별 실행(배열로 반환)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"주어진 함수를 배열 요소 각각에 대해 실행하고 결과를 배열로 반환 : \", React.createElement(_components.code, null, \"Array.map(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"기본 예제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let abc = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"];\\n\\nlet abcMap = abc.map(function (item) {\\n  return item + \\\" map 순회\\\";\\n});\\n\\nfor (let item of abcMap) {\\n  console.log(item);\\n}\\n\\n// a map 순회\\n// b map 순회\\n// c map 순회\\n// d map 순회\\n\")), \"\\n\", React.createElement(_components.h3, null, \"4. find() - 조건만족하는 값 하나 반환\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"콜백 함수의 조건을 만족하는 단 \", React.createElement(_components.strong, null, \"하나\"), \"의 값만 반환 : \", React.createElement(_components.code, null, \"Array.find(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"기본 예제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let person = [\\n  {\\n    name: \\\"김정현\\\",\\n    age: 28,\\n  },\\n  {\\n    name: \\\"배윤주\\\",\\n    age: 26,\\n  },\\n  {\\n    name: \\\"김길동\\\",\\n    age: 16,\\n  },\\n  {\\n    name: \\\"박길동\\\",\\n    age: 18,\\n  },\\n];\\n\\nlet findName = person.find(function (user) {\\n  return user.name === \\\"김정현\\\";\\n});\\n\\nlet findAge = person.find(function (user) {\\n  return user.age < 18;\\n});\\n\\nconsole.log(findName); // { name: '김정현', age: 28 }\\nconsole.log(findAge); // { name: '김길동', age: 16 }\\n\")), \"\\n\", React.createElement(_components.h3, null, \"5. filter() - 조건만족하는 값을 배열로 반환\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"콜백 함수의 조건을 만족하는 값을 배열로 반환 : \", React.createElement(_components.code, null, \"Array.filter(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"기본 예제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let person = [\\n  {\\n    name: \\\"김정현\\\",\\n    age: 28,\\n  },\\n  {\\n    name: \\\"배윤주\\\",\\n    age: 26,\\n  },\\n  {\\n    name: \\\"김길동\\\",\\n    age: 16,\\n  },\\n  {\\n    name: \\\"박길동\\\",\\n    age: 18,\\n  },\\n];\\n\\nlet findAge = person.filter(function (user) {\\n  return user.age > 18;\\n});\\n\\nconsole.log(findAge); // [ { name: '김정현', age: 28 }, { name: '배윤주', age: 26 } ]\\n\")), \"\\n\", React.createElement(_components.h3, null, \"6. reduce() - 요소 별 실행(누적 값 반환)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"요소 별 함수 수행 누적 결과값 반환 : \", React.createElement(_components.code, null, \"Array.reduce(function(accumulator, item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"기본 예제\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let nums = [1, 2, 3, 4, 5, 6, 7];\\nlet count = 0;\\n\\nlet sum = nums.reduce(function (acc, item, index, array) {\\n  count++;\\n  console.log(acc, \\\" \\\", item, \\\" \\\", index);\\n  return acc + item;\\n}, 0); // acc값 init하는 부분(default : 1)\\n\\nconsole.log(\\\"count : \\\" + count);\\n\\n// 0   1   0\\n// 1   2   1\\n// 3   3   2\\n// 6   4   3\\n// 10   5   4\\n// 15   6   5\\n// 21   7   6\\n// count : 7\\n\")), \"\\n\", React.createElement(_components.h3, null, \"7. some() - 요소의 조건 만족시 참\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"배열 내 단 하나라도 콜백 함수의 조건을 만족하는 요소가 있다면 true\\n\", React.createElement(_components.code, null, \"Array.some(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let person = [\\n  {\\n    name: \\\"김정현\\\",\\n    age: 28,\\n  },\\n  {\\n    name: \\\"배윤주\\\",\\n    age: 26,\\n  },\\n  {\\n    name: \\\"김길동\\\",\\n    age: 16,\\n  },\\n  {\\n    name: \\\"박길동\\\",\\n    age: 18,\\n  },\\n];\\n\\nlet someAge = person.some(function (user) {\\n  return user.age == 28;\\n});\\n\\nconsole.log(someAge); // true\\n\")), \"\\n\", React.createElement(_components.h3, null, \"8. every() - 요소 모두 조건 만족시 참\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"배열 내 모든 요소가 콜백 함수의 조건을 만족하는 요소가 있다면 true\\n\", React.createElement(_components.code, null, \"Array.every(function(item, index, array){})\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let person = [\\n  {\\n    name: \\\"김정현\\\",\\n    age: 28,\\n  },\\n  {\\n    name: \\\"배윤주\\\",\\n    age: 26,\\n  },\\n  {\\n    name: \\\"김길동\\\",\\n    age: 16,\\n  },\\n  {\\n    name: \\\"박길동\\\",\\n    age: 18,\\n  },\\n];\\n\\nlet everyAge = person.every(function (user) {\\n  return user.age > 15;\\n});\\n\\nconsole.log(everyAge); // true\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Review 💡\"), \"\\n\", React.createElement(_components.p, null, \"이번 포스트에는 자바스크립트의 배열에 대해 알아보고, 일반 배열과의 차이점에 대해 공부해보았다.\"), \"\\n\", React.createElement(_components.p, null, \"또한, 자바스크립트 배열의 프로토타입 메서드 14가지 정도를 살펴보았고. 각각의 동작원리에 대해 이해하고, 예제 코드로 실습을 해보았다.\"), \"\\n\", React.createElement(_components.p, null, \"이전 개인 프로젝트 등을 진행하면서 reduce, filter, map 등 함수들을 자주 사용했는데, 이번 기회에 정리를 해보니 더 유용하게 사용할 수 있겠다는 생각이 들었다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"API 호출로 가져오는 JSON Data의 가공이나 Data 필터 조회 시 사용했는데,, 객체의 depth가 깊어질 수록 함수를 짜기가 어려웠던 것 같다. 기초를 단단히 하였으니 다음엔 더 효율적인 코드를 작성할 수 있을 것 같다.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/task11.github.io/task11.github.io/content/posts/javascript-array/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","blockquote","p","h1","hr","code","h2","h3","pre","ol","li","h4","strong","_provideComponents","components","className","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}